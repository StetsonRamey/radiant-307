<!-- src/_components/services-areas.webc -->
<section class="how-we-help-section">
  <div class="container flow">
    <div class="section-title">
      <h2>Serving Cheyenne, WY and Surrounding Areas</h2>
    </div>

    <!-- Google Map Placeholder -->
    <div>
      <h3>Service Area Map</h2>
        <div id="maps"></div>
    </div>

    <div class="service-areas-list">
      <div class="wrapper">
        <div class="header-with-icon">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
            class="lucide lucide-house">
            <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"></path>
            <path
              d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z">
            </path>
          </svg>
          <h3>Cheyenne Neighborhoods</h6>
        </div>
        <ul>
          <li webc:for="(hood, name) in areas['Cheyenne Neighborhoods']">
            <a :href="name.slug" class="card-link" @text="hood"></a>
          </li>
        </ul>
      </div>
    </div>
  </div>
  <!-- SVG Curve -->
  <svg viewBox="0 0 1024 180" class="section-curve" preserveAspectRatio="none" aria-hidden="true">
    <path d="M0,180 L1024,180 L1024,0 C768,200 256,180 0,0 L0,180 Z" fill="rgb(27, 37, 43)"></path>
    <!-- Match testimonial background -->
  </svg>
</section>

<style webc:scoped>
  #maps {
    height: 500px;
    width: 100%;
    margin-block-end: 3rem;
  }

  .how-we-help-section {
    position: relative;
    /* Gradient like Cloudflare */
    background-image: linear-gradient(to right, var(--color-primary-200), var(--color-primary-100));
    color: var(--color-primary-950);
    /* Dark text for light background */
    padding-bottom: 180px;
    /* Extra space for the curve */
    z-index: 10;
    /* Ensure it's above default content, but below potential fixed headers */
  }

  .how-we-help-section .container {
    padding: 0 1rem;
    position: relative;
    /* Needed for z-index stacking context */
    z-index: 2;
    /* Container content above the curve */
  }

  .section-title {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-title h2 {
    font-size: 2.25rem;
    /* ~h2 */
    font-weight: 600;
  }

  /* Google Map Styling */
  .map-container {
    position: relative;
    padding-bottom: 56.25%;
    /* 16:9 aspect ratio */
    height: 0;
    overflow: hidden;
    max-width: 100%;
    background: var(--light-color);
    margin-bottom: 3rem;
    /* Space between map and cards */
    border-radius: 8px;
    /* Optional rounded corners */
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .map-iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .map-placeholder-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    padding: 1rem;
    color: var(--dark-text);
    font-size: 0.9rem;
  }

  /* Hide placeholder text once the iframe loads */
  .map-iframe:not([src=""])+.map-placeholder-text {
    display: none;
  }

  .card-link {
    color: var(--color-flush-orange-200);
    /* Tangerine */
    font-weight: 600;
    text-decoration: none;
    margin-top: auto;
    /* Push link to bottom */
  }

  .card-link:hover {
    text-decoration: underline;
  }


  /* SVG Curve Styling */
  .section-curve {
    position: absolute;
    bottom: -1px;
    /* Sit just below the content */
    left: 0;
    right: 0;
    width: 100%;
    height: 150px;
    /* Match viewBox height */
    z-index: 1;
    /* Below container content, above next section's potential background */
  }

  .section-curve path {
    /* Fill color should match the background of the *next* section */
    fill: var(--color-yellow-950);
    /* Default to dark like testimonials */
  }

  .service-areas-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    padding: 2rem;
  }

  .service-areas-list {
    background-color: var(--color-primary-800);
    padding: 2rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .header-with-icon {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .wrapper h3 {
    color: var(--color-glare-200);
    font-size: 1.25rem;
    margin: 0;
    font-weight: 600;
  }

  .wrapper svg {
    color: var(--color-glare-200);
  }

  .wrapper ul {
    list-style: none;
    padding-block: 0;
    padding-inline: 0;
    margin-block: 0;
    margin-inline: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .wrapper .card-link {
    display: block;
    color: var(--color-primary-950);
    text-decoration: none;
    padding: 0.5rem 0.75rem;
    border-radius: 4px;
    background-color: var(--color-yellow-800);
    border: 3px solid var(--color-yellow-800);
    transition: all 0.2s ease;
  }

  .wrapper .card-link:hover {
    background: transparent;
    color: var(--color-yellow-950);
    transform: translateY(-1px);
  }
</style>

<script webc:scoped>
  function initMap() {
    // 1. Define Center and Radius
    const centerCoords = { lat: 41.13401, lng: -104.820188 }; // Example: Los Angeles
    const radiusInMeters = 2.8 * 1609.34; // Example: 10 miles converted to meters (API uses meters)

    // 2. Define Custom Map Styles (Optional)
    // Use https://mapstyle.withgoogle.com/ to generate styles easily!
    const mapStyles = [
      {
        elementType: "geometry",
        stylers: [
          {
            color: "#f5f5f5",
          },
        ],
      },
      {
        elementType: "labels.icon",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#616161",
          },
        ],
      },
      {
        elementType: "labels.text.stroke",
        stylers: [
          {
            color: "#f5f5f5",
          },
        ],
      },
      {
        featureType: "administrative.land_parcel",
        elementType: "labels",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "administrative.land_parcel",
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#bdbdbd",
          },
        ],
      },
      {
        featureType: "poi",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "poi",
        elementType: "geometry",
        stylers: [
          {
            color: "#eeeeee",
          },
        ],
      },
      {
        featureType: "poi",
        elementType: "labels.text",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "poi",
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#757575",
          },
        ],
      },
      {
        featureType: "poi.business",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "poi.park",
        elementType: "geometry",
        stylers: [
          {
            color: "#e5e5e5",
          },
        ],
      },
      {
        featureType: "poi.park",
        elementType: "labels.text",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "poi.park",
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#9e9e9e",
          },
        ],
      },
      {
        featureType: "road",
        elementType: "geometry",
        stylers: [
          {
            color: "#ffffff",
          },
        ],
      },
      {
        featureType: "road.arterial",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "road.arterial",
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#757575",
          },
        ],
      },
      {
        featureType: "road.highway",
        elementType: "geometry",
        stylers: [
          {
            color: "#dadada",
          },
        ],
      },
      {
        featureType: "road.highway",
        elementType: "labels",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "road.highway",
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#616161",
          },
        ],
      },
      {
        featureType: "road.local",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "road.local",
        elementType: "labels",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "road.local",
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#9e9e9e",
          },
        ],
      },
      {
        featureType: "transit.line",
        elementType: "geometry",
        stylers: [
          {
            color: "#e5e5e5",
          },
        ],
      },
      {
        featureType: "transit.station",
        elementType: "geometry",
        stylers: [
          {
            color: "#eeeeee",
          },
        ],
      },
      {
        featureType: "water",
        elementType: "geometry",
        stylers: [
          {
            color: "#c9c9c9",
          },
        ],
      },
      {
        featureType: "water",
        elementType: "labels.text.fill",
        stylers: [
          {
            color: "#9e9e9e",
          },
        ],
      },
    ];
    // 3. Create the Map
    const map = new google.maps.Map(document.getElementById("maps"), {
      zoom: 12, // Adjust zoom level to fit the radius nicely
      center: centerCoords,
      styles: mapStyles, // Apply the custom styles
      mapTypeControl: false, // Optional: hide map type selector
      streetViewControl: false, // Optional: hide street view pegman
    });

    // 4. Draw the Radius Circle
    const serviceAreaCircle = new google.maps.Circle({
      strokeColor: "#f6821f", // Red outline
      strokeOpacity: 0.8,
      strokeWeight: 1,
      fillColor: "#fbad41", // Red fill
      fillOpacity: 0.25, // Semi-transparent fill
      map: map, // Attach the circle to the map
      center: centerCoords,
      radius: radiusInMeters, // Radius in METERS
    });
  }
</script>
